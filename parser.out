Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BOOL
    COLLON
    DECREMENTO
    DIFERENTEQUE
    DIVISION
    ELSE
    FLOAT32
    FLOAT64
    FOR
    FUNC
    IF
    IGUALQUE
    INCREMENTO
    INT
    LKEY
    MAYORIGUALQUE
    MAYORQUE
    MENORIGUALQUE
    MENORQUE
    MODULO
    MULTIPLICACION
    RESTA
    RETURN
    RKEY
    STRING
    SUMA
    SWITCH
    VAR
    case

Grammar

Rule 0     S' -> sentendia
Rule 1     sentendia -> impresion
Rule 2     sentendia -> asignacion
Rule 3     asignacion -> IDENTIFICADOR ASSIGN valor
Rule 4     impresion -> IMPRIMIR LPAREN valores RPAREN
Rule 5     valor -> ENTERO
Rule 6     valor -> FLOTANTE
Rule 7     valores -> valor
Rule 8     valores -> valor COMA valores

Terminals, with rules where they appear

ASSIGN               : 3
BOOL                 : 
COLLON               : 
COMA                 : 8
DECREMENTO           : 
DIFERENTEQUE         : 
DIVISION             : 
ELSE                 : 
ENTERO               : 5
FLOAT32              : 
FLOAT64              : 
FLOTANTE             : 6
FOR                  : 
FUNC                 : 
IDENTIFICADOR        : 3
IF                   : 
IGUALQUE             : 
IMPRIMIR             : 4
INCREMENTO           : 
INT                  : 
LKEY                 : 
LPAREN               : 4
MAYORIGUALQUE        : 
MAYORQUE             : 
MENORIGUALQUE        : 
MENORQUE             : 
MODULO               : 
MULTIPLICACION       : 
RESTA                : 
RETURN               : 
RKEY                 : 
RPAREN               : 4
STRING               : 
SUMA                 : 
SWITCH               : 
VAR                  : 
case                 : 
error                : 

Nonterminals, with rules where they appear

asignacion           : 2
impresion            : 1
sentendia            : 0
valor                : 3 7 8
valores              : 4 8

Parsing method: LALR

state 0

    (0) S' -> . sentendia
    (1) sentendia -> . impresion
    (2) sentendia -> . asignacion
    (4) impresion -> . IMPRIMIR LPAREN valores RPAREN
    (3) asignacion -> . IDENTIFICADOR ASSIGN valor

    IMPRIMIR        shift and go to state 4
    IDENTIFICADOR   shift and go to state 5

    sentendia                      shift and go to state 1
    impresion                      shift and go to state 2
    asignacion                     shift and go to state 3

state 1

    (0) S' -> sentendia .



state 2

    (1) sentendia -> impresion .

    $end            reduce using rule 1 (sentendia -> impresion .)


state 3

    (2) sentendia -> asignacion .

    $end            reduce using rule 2 (sentendia -> asignacion .)


state 4

    (4) impresion -> IMPRIMIR . LPAREN valores RPAREN

    LPAREN          shift and go to state 6


state 5

    (3) asignacion -> IDENTIFICADOR . ASSIGN valor

    ASSIGN          shift and go to state 7


state 6

    (4) impresion -> IMPRIMIR LPAREN . valores RPAREN
    (7) valores -> . valor
    (8) valores -> . valor COMA valores
    (5) valor -> . ENTERO
    (6) valor -> . FLOTANTE

    ENTERO          shift and go to state 10
    FLOTANTE        shift and go to state 11

    valores                        shift and go to state 8
    valor                          shift and go to state 9

state 7

    (3) asignacion -> IDENTIFICADOR ASSIGN . valor
    (5) valor -> . ENTERO
    (6) valor -> . FLOTANTE

    ENTERO          shift and go to state 10
    FLOTANTE        shift and go to state 11

    valor                          shift and go to state 12

state 8

    (4) impresion -> IMPRIMIR LPAREN valores . RPAREN

    RPAREN          shift and go to state 13


state 9

    (7) valores -> valor .
    (8) valores -> valor . COMA valores

    RPAREN          reduce using rule 7 (valores -> valor .)
    COMA            shift and go to state 14


state 10

    (5) valor -> ENTERO .

    COMA            reduce using rule 5 (valor -> ENTERO .)
    RPAREN          reduce using rule 5 (valor -> ENTERO .)
    $end            reduce using rule 5 (valor -> ENTERO .)


state 11

    (6) valor -> FLOTANTE .

    COMA            reduce using rule 6 (valor -> FLOTANTE .)
    RPAREN          reduce using rule 6 (valor -> FLOTANTE .)
    $end            reduce using rule 6 (valor -> FLOTANTE .)


state 12

    (3) asignacion -> IDENTIFICADOR ASSIGN valor .

    $end            reduce using rule 3 (asignacion -> IDENTIFICADOR ASSIGN valor .)


state 13

    (4) impresion -> IMPRIMIR LPAREN valores RPAREN .

    $end            reduce using rule 4 (impresion -> IMPRIMIR LPAREN valores RPAREN .)


state 14

    (8) valores -> valor COMA . valores
    (7) valores -> . valor
    (8) valores -> . valor COMA valores
    (5) valor -> . ENTERO
    (6) valor -> . FLOTANTE

    ENTERO          shift and go to state 10
    FLOTANTE        shift and go to state 11

    valor                          shift and go to state 9
    valores                        shift and go to state 15

state 15

    (8) valores -> valor COMA valores .

    RPAREN          reduce using rule 8 (valores -> valor COMA valores .)

