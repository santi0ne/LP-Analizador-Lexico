Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CASE
    COLLON
    DECREMENTO
    DIFERENTEQUE
    DIVISION
    ELSE
    FLOAT32
    FLOAT64
    FOR
    FUNC
    IF
    IGUALQUE
    INCREMENTO
    INT
    MAYORIGUALQUE
    MAYORQUE
    MENORIGUALQUE
    MENORQUE
    MODULO
    MULTIPLICACION
    RESTA
    RETURN
    SUMA
    SWITCH

Grammar

Rule 0     S' -> sentencia
Rule 1     sentencia -> impresion
Rule 2     sentencia -> asignacion
Rule 3     sentencia -> variable
Rule 4     sentencia -> estructura
Rule 5     variable -> VAR IDENTIFICADOR ASSIGN valor
Rule 6     estructura -> TYPE IDENTIFICADOR STRUCT LKEY RKEY
Rule 7     asignacion -> IDENTIFICADOR ASSIGN valores
Rule 8     impresion -> IMPRIMIR LPAREN valores RPAREN
Rule 9     impresion -> IMPRIMIR LPAREN RPAREN
Rule 10    valores -> valor
Rule 11    valores -> valor COMA valores
Rule 12    valor -> ENTERO
Rule 13    valor -> FLOTANTE
Rule 14    valor -> STRING
Rule 15    valor -> BOOL
Rule 16    valor -> IDENTIFICADOR

Terminals, with rules where they appear

ASSIGN               : 5 7
BOOL                 : 15
CASE                 : 
COLLON               : 
COMA                 : 11
DECREMENTO           : 
DIFERENTEQUE         : 
DIVISION             : 
ELSE                 : 
ENTERO               : 12
FLOAT32              : 
FLOAT64              : 
FLOTANTE             : 13
FOR                  : 
FUNC                 : 
IDENTIFICADOR        : 5 6 7 16
IF                   : 
IGUALQUE             : 
IMPRIMIR             : 8 9
INCREMENTO           : 
INT                  : 
LKEY                 : 6
LPAREN               : 8 9
MAYORIGUALQUE        : 
MAYORQUE             : 
MENORIGUALQUE        : 
MENORQUE             : 
MODULO               : 
MULTIPLICACION       : 
RESTA                : 
RETURN               : 
RKEY                 : 6
RPAREN               : 8 9
STRING               : 14
STRUCT               : 6
SUMA                 : 
SWITCH               : 
TYPE                 : 6
VAR                  : 5
error                : 

Nonterminals, with rules where they appear

asignacion           : 2
estructura           : 4
impresion            : 1
sentencia            : 0
valor                : 5 10 11
valores              : 7 8 11
variable             : 3

Parsing method: LALR

state 0

    (0) S' -> . sentencia
    (1) sentencia -> . impresion
    (2) sentencia -> . asignacion
    (3) sentencia -> . variable
    (4) sentencia -> . estructura
    (8) impresion -> . IMPRIMIR LPAREN valores RPAREN
    (9) impresion -> . IMPRIMIR LPAREN RPAREN
    (7) asignacion -> . IDENTIFICADOR ASSIGN valores
    (5) variable -> . VAR IDENTIFICADOR ASSIGN valor
    (6) estructura -> . TYPE IDENTIFICADOR STRUCT LKEY RKEY

    IMPRIMIR        shift and go to state 6
    IDENTIFICADOR   shift and go to state 7
    VAR             shift and go to state 8
    TYPE            shift and go to state 9

    sentencia                      shift and go to state 1
    impresion                      shift and go to state 2
    asignacion                     shift and go to state 3
    variable                       shift and go to state 4
    estructura                     shift and go to state 5

state 1

    (0) S' -> sentencia .



state 2

    (1) sentencia -> impresion .

    $end            reduce using rule 1 (sentencia -> impresion .)


state 3

    (2) sentencia -> asignacion .

    $end            reduce using rule 2 (sentencia -> asignacion .)


state 4

    (3) sentencia -> variable .

    $end            reduce using rule 3 (sentencia -> variable .)


state 5

    (4) sentencia -> estructura .

    $end            reduce using rule 4 (sentencia -> estructura .)


state 6

    (8) impresion -> IMPRIMIR . LPAREN valores RPAREN
    (9) impresion -> IMPRIMIR . LPAREN RPAREN

    LPAREN          shift and go to state 10


state 7

    (7) asignacion -> IDENTIFICADOR . ASSIGN valores

    ASSIGN          shift and go to state 11


state 8

    (5) variable -> VAR . IDENTIFICADOR ASSIGN valor

    IDENTIFICADOR   shift and go to state 12


state 9

    (6) estructura -> TYPE . IDENTIFICADOR STRUCT LKEY RKEY

    IDENTIFICADOR   shift and go to state 13


state 10

    (8) impresion -> IMPRIMIR LPAREN . valores RPAREN
    (9) impresion -> IMPRIMIR LPAREN . RPAREN
    (10) valores -> . valor
    (11) valores -> . valor COMA valores
    (12) valor -> . ENTERO
    (13) valor -> . FLOTANTE
    (14) valor -> . STRING
    (15) valor -> . BOOL
    (16) valor -> . IDENTIFICADOR

    RPAREN          shift and go to state 15
    ENTERO          shift and go to state 17
    FLOTANTE        shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    IDENTIFICADOR   shift and go to state 21

    valores                        shift and go to state 14
    valor                          shift and go to state 16

state 11

    (7) asignacion -> IDENTIFICADOR ASSIGN . valores
    (10) valores -> . valor
    (11) valores -> . valor COMA valores
    (12) valor -> . ENTERO
    (13) valor -> . FLOTANTE
    (14) valor -> . STRING
    (15) valor -> . BOOL
    (16) valor -> . IDENTIFICADOR

    ENTERO          shift and go to state 17
    FLOTANTE        shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    IDENTIFICADOR   shift and go to state 21

    valores                        shift and go to state 22
    valor                          shift and go to state 16

state 12

    (5) variable -> VAR IDENTIFICADOR . ASSIGN valor

    ASSIGN          shift and go to state 23


state 13

    (6) estructura -> TYPE IDENTIFICADOR . STRUCT LKEY RKEY

    STRUCT          shift and go to state 24


state 14

    (8) impresion -> IMPRIMIR LPAREN valores . RPAREN

    RPAREN          shift and go to state 25


state 15

    (9) impresion -> IMPRIMIR LPAREN RPAREN .

    $end            reduce using rule 9 (impresion -> IMPRIMIR LPAREN RPAREN .)


state 16

    (10) valores -> valor .
    (11) valores -> valor . COMA valores

    RPAREN          reduce using rule 10 (valores -> valor .)
    $end            reduce using rule 10 (valores -> valor .)
    COMA            shift and go to state 26


state 17

    (12) valor -> ENTERO .

    COMA            reduce using rule 12 (valor -> ENTERO .)
    RPAREN          reduce using rule 12 (valor -> ENTERO .)
    $end            reduce using rule 12 (valor -> ENTERO .)


state 18

    (13) valor -> FLOTANTE .

    COMA            reduce using rule 13 (valor -> FLOTANTE .)
    RPAREN          reduce using rule 13 (valor -> FLOTANTE .)
    $end            reduce using rule 13 (valor -> FLOTANTE .)


state 19

    (14) valor -> STRING .

    COMA            reduce using rule 14 (valor -> STRING .)
    RPAREN          reduce using rule 14 (valor -> STRING .)
    $end            reduce using rule 14 (valor -> STRING .)


state 20

    (15) valor -> BOOL .

    COMA            reduce using rule 15 (valor -> BOOL .)
    RPAREN          reduce using rule 15 (valor -> BOOL .)
    $end            reduce using rule 15 (valor -> BOOL .)


state 21

    (16) valor -> IDENTIFICADOR .

    COMA            reduce using rule 16 (valor -> IDENTIFICADOR .)
    RPAREN          reduce using rule 16 (valor -> IDENTIFICADOR .)
    $end            reduce using rule 16 (valor -> IDENTIFICADOR .)


state 22

    (7) asignacion -> IDENTIFICADOR ASSIGN valores .

    $end            reduce using rule 7 (asignacion -> IDENTIFICADOR ASSIGN valores .)


state 23

    (5) variable -> VAR IDENTIFICADOR ASSIGN . valor
    (12) valor -> . ENTERO
    (13) valor -> . FLOTANTE
    (14) valor -> . STRING
    (15) valor -> . BOOL
    (16) valor -> . IDENTIFICADOR

    ENTERO          shift and go to state 17
    FLOTANTE        shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    IDENTIFICADOR   shift and go to state 21

    valor                          shift and go to state 27

state 24

    (6) estructura -> TYPE IDENTIFICADOR STRUCT . LKEY RKEY

    LKEY            shift and go to state 28


state 25

    (8) impresion -> IMPRIMIR LPAREN valores RPAREN .

    $end            reduce using rule 8 (impresion -> IMPRIMIR LPAREN valores RPAREN .)


state 26

    (11) valores -> valor COMA . valores
    (10) valores -> . valor
    (11) valores -> . valor COMA valores
    (12) valor -> . ENTERO
    (13) valor -> . FLOTANTE
    (14) valor -> . STRING
    (15) valor -> . BOOL
    (16) valor -> . IDENTIFICADOR

    ENTERO          shift and go to state 17
    FLOTANTE        shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    IDENTIFICADOR   shift and go to state 21

    valor                          shift and go to state 16
    valores                        shift and go to state 29

state 27

    (5) variable -> VAR IDENTIFICADOR ASSIGN valor .

    $end            reduce using rule 5 (variable -> VAR IDENTIFICADOR ASSIGN valor .)


state 28

    (6) estructura -> TYPE IDENTIFICADOR STRUCT LKEY . RKEY

    RKEY            shift and go to state 30


state 29

    (11) valores -> valor COMA valores .

    RPAREN          reduce using rule 11 (valores -> valor COMA valores .)
    $end            reduce using rule 11 (valores -> valor COMA valores .)


state 30

    (6) estructura -> TYPE IDENTIFICADOR STRUCT LKEY RKEY .

    $end            reduce using rule 6 (estructura -> TYPE IDENTIFICADOR STRUCT LKEY RKEY .)

