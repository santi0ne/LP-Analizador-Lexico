
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN BOOL COLLON COMA DECREMENTO DIFERENTEQUE DIVISION ELSE ENTERO FLOAT32 FLOAT64 FLOTANTE FOR FUNC IDENTIFICADOR IF IGUALQUE IMPRIMIR INCREMENTO INT LKEY LPAREN MAYORIGUALQUE MAYORQUE MENORIGUALQUE MENORQUE MODULO MULTIPLICACION RESTA RETURN RKEY RPAREN STRING SUMA SWITCH VAR casesentendia : impresion\n                | asignacion\n                asignacion : IDENTIFICADOR ASSIGN valorimpresion : IMPRIMIR LPAREN valores RPAREN valor : ENTERO\n            | FLOTANTEvalores : valor\n                | valor COMA valores '
    
_lr_action_items = {'IMPRIMIR':([0,],[4,]),'IDENTIFICADOR':([0,],[5,]),'$end':([1,2,3,10,11,12,13,],[0,-1,-2,-5,-6,-3,-4,]),'LPAREN':([4,],[6,]),'ASSIGN':([5,],[7,]),'ENTERO':([6,7,14,],[10,10,10,]),'FLOTANTE':([6,7,14,],[11,11,11,]),'RPAREN':([8,9,10,11,15,],[13,-7,-5,-6,-8,]),'COMA':([9,10,11,],[14,-5,-6,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'sentendia':([0,],[1,]),'impresion':([0,],[2,]),'asignacion':([0,],[3,]),'valores':([6,14,],[8,15,]),'valor':([6,7,14,],[9,12,9,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> sentendia","S'",1,None,None,None),
  ('sentendia -> impresion','sentendia',1,'p_sentencia','main.py',7),
  ('sentendia -> asignacion','sentendia',1,'p_sentencia','main.py',8),
  ('asignacion -> IDENTIFICADOR ASSIGN valor','asignacion',3,'p_asignacion','main.py',12),
  ('impresion -> IMPRIMIR LPAREN valores RPAREN','impresion',4,'p_impresion','main.py',16),
  ('valor -> ENTERO','valor',1,'p_valor','main.py',19),
  ('valor -> FLOTANTE','valor',1,'p_valor','main.py',20),
  ('valores -> valor','valores',1,'p_valores','main.py',23),
  ('valores -> valor COMA valores','valores',3,'p_valores','main.py',24),
]
