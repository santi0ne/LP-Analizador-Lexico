
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN BOOL COLLON COMA DECREMENTO DIFERENTEQUE DIVISION ELSE ENTERO FLOAT32 FLOAT64 FLOTANTE FOR FUNC IDENTIFICADOR IF IGUALQUE IMPRIMIR INCREMENTO INT LKEY LPAREN MAYORIGUALQUE MAYORQUE MENORIGUALQUE MENORQUE MODULO MULTIPLICACION RESTA RETURN RKEY RPAREN STRING SUMA SWITCH VAR casesentencia : impresion\n                | asignacion\n                | variable\n                variable : VAR IDENTIFICADOR ASSIGN valorasignacion : IDENTIFICADOR ASSIGN valoresimpresion : IMPRIMIR LPAREN valores RPAREN impresion : IMPRIMIR LPAREN RPARENvalores : valor\n                | valor COMA valores\n                valor : ENTERO\n            | FLOTANTE\n            | STRING\n            | BOOL\n            | IDENTIFICADOR\n            '
    
_lr_action_items = {'IMPRIMIR':([0,],[5,]),'IDENTIFICADOR':([0,7,8,9,20,22,],[6,10,18,18,18,18,]),'VAR':([0,],[7,]),'$end':([1,2,3,4,12,13,14,15,16,17,18,19,21,23,24,],[0,-1,-2,-3,-7,-8,-10,-11,-12,-13,-14,-5,-6,-4,-9,]),'LPAREN':([5,],[8,]),'ASSIGN':([6,10,],[9,20,]),'RPAREN':([8,11,13,14,15,16,17,18,24,],[12,21,-8,-10,-11,-12,-13,-14,-9,]),'ENTERO':([8,9,20,22,],[14,14,14,14,]),'FLOTANTE':([8,9,20,22,],[15,15,15,15,]),'STRING':([8,9,20,22,],[16,16,16,16,]),'BOOL':([8,9,20,22,],[17,17,17,17,]),'COMA':([13,14,15,16,17,18,],[22,-10,-11,-12,-13,-14,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'sentencia':([0,],[1,]),'impresion':([0,],[2,]),'asignacion':([0,],[3,]),'variable':([0,],[4,]),'valores':([8,9,22,],[11,19,24,]),'valor':([8,9,20,22,],[13,13,23,13,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> sentencia","S'",1,None,None,None),
  ('sentencia -> impresion','sentencia',1,'p_sentencia','sintactico.py',7),
  ('sentencia -> asignacion','sentencia',1,'p_sentencia','sintactico.py',8),
  ('sentencia -> variable','sentencia',1,'p_sentencia','sintactico.py',9),
  ('variable -> VAR IDENTIFICADOR ASSIGN valor','variable',4,'p_variable','sintactico.py',12),
  ('asignacion -> IDENTIFICADOR ASSIGN valores','asignacion',3,'p_asignacion','sintactico.py',15),
  ('impresion -> IMPRIMIR LPAREN valores RPAREN','impresion',4,'p_impresion','sintactico.py',19),
  ('impresion -> IMPRIMIR LPAREN RPAREN','impresion',3,'p_impresion_sin_valor','sintactico.py',22),
  ('valores -> valor','valores',1,'p_valores','sintactico.py',25),
  ('valores -> valor COMA valores','valores',3,'p_valores','sintactico.py',26),
  ('valor -> ENTERO','valor',1,'p_valor','sintactico.py',29),
  ('valor -> FLOTANTE','valor',1,'p_valor','sintactico.py',30),
  ('valor -> STRING','valor',1,'p_valor','sintactico.py',31),
  ('valor -> BOOL','valor',1,'p_valor','sintactico.py',32),
  ('valor -> IDENTIFICADOR','valor',1,'p_valor','sintactico.py',33),
]
